/*  Specification with several dependencies
    a - b - c - f
    d - e
    g
    not splittable when overapproximating assumption dependencies
*/
initially assume  {
    in2 && !in4;
}
always assume {
    [c <- c3()] -> F in3; // dep c - in3
}
initially guarantee{
    !([a <- c1()] && [b <- c1()]) // dep a - b
}
always guarantee {
    in1 -> [a <- c1()];

    [a <- c2()] <-> [c <- c3()]; // dep a - c

    in2 && in3 -> ([d <- fun in2] || [e <- e]); // dep d - e

    in2 || in4 <-> [e <- fun in3];


    [a <- c2()] || [b <- c5()]; // dep a - b


    [c <- c3()] <-> [f <- c6()]; // dep c - f

    (in2 || in3 || in4) -> [g <- c3()]

}
